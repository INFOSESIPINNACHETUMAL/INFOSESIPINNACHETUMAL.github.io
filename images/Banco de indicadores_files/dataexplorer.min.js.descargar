var cuadro = new cuadroExportacionComponente, cveserieslocal = "", seleccionIndicador = "", seleccionArea = "", arrayPeriodos = []; !function () { function e(e) { return new o(e) } var o = function (e) { if (e) { configura(e).init(); var o = document.querySelectorAll(e), n = 0; for (this.length = o.length, this.id = o[this.length - 1].id, this.dominio = C_dominio, this.tk = C_token, this.imagen = "/componentes/biinegi", this.servicio = C_direccionServicio_V + "_" + API_V, this.container = e; n < this.length; n++)this[n] = o[n]; return this } return function () { this.autor = "INEGI. Departamento de Investigación y Desarrollo en Sistemas WEB y Móviles - SNM", this.version = "1.0.0", this.fecha = "14/03/2017", this.ultimaactualizacion = "14/03/2017 se agrega vista para seleccion de area multiple" }() }; e.fn = o.prototype = { init: function (e, o, n, i, t, a, r, l, c, d, s) { var m = this; document.getElementById("dataExplorerTitle").innerHTML = d, $("#divOpcionesExp")[0].style.display = "", m.muestratotalmodal(e), m.recordEventClose(), m.LimpiaCombo("comboVerCuadro"); document.getElementById("comboVerCuadro"); "indicador" == s ? (indicadorComboGlobal = e, m.queryperiods(e, o, n, i, t, a, r, l, c, s)) : m.consultaNombresIndicadores(e, o, n, i, t, a, r, l, c, d, s) }, consultaNombresIndicadores: function (o, n, i, t, a, r, l, c, d, s, m) { var e, u = this; o.length < 200 ? (e = u.servicio + "/IndicadoresSeleccionadosTematicas/" + o + "/" + i + "/" + tematicaGlobal + "/json/" + u.tk + "?callback=?", $.getJSON(e, null, function (e) { u.dibujaComboIndicadores(e, o, n, i, t, a, r, l, c, d, s, m) })) : (e = { indicadores: o, idioma: i, tematica: tematicaGlobal, formato: "json", token: u.tk }, e = JSON.stringify(e), $.ajax({ method: "POST", url: u.servicio + "/IndicadoresSeleccionadosTematicas", contentType: "application/json; charset=utf-8", dataType: "json", data: e, processData: !0, success: function (e) { u.dibujaComboIndicadores(e, o, n, i, t, a, r, l, c, d, s, m) }, error: function (e, o, n) { console.log(o, n) } })) }, dibujaComboIndicadores: function (e, o, n, i, t, a, r, l, c, d, s, m) { this.LimpiaCombo("comboVerCuadro"); for (var u = document.getElementById("comboVerCuadro"), p = 0; p < e.length; p++)for (var h = 0; h < e[p].indicadores.length; h++)this.generaItemsComboBootstrap(u, e[p].indicadores[h].nombre, e[p].indicadores[h].indicador, n, i, t, a, r, l, c, d, s, m); document.getElementById("btnCombo").innerHTML = e[0].indicadores[0].nombre + '<a></a><span class="caret"></span>', indicadorComboGlobal = e[0].indicadores[0].indicador, document.getElementById("dataExplorerTitle").innerHTML = e[0].indicadores[0].nombre, this.queryperiods(indicadorComboGlobal, n, i, t, a, r, l, c, d, m) }, changeComboExplorer: function (e, o, n, i, t, a, r, l, c, d, s, m) { document.getElementById("btnCombo").innerHTML = e + '<a></a><span class="caret"></span>', indicadorComboGlobal = o, document.getElementById("dataExplorerTitle").innerHTML = e, this.queryperiods(o, areaGeograficaConsultaGlobal, i, t, a, r, l, c, d, m) }, LimpiaCombo: function (e) { $("#" + e).find("li").remove().end() }, generaItemsComboBootstrap: function (e, o, n, i, t, a, r, l, c, d, s, m, u) { var p = document.createElement("li"), h = document.createElement("a"); h.textContent = o, h.setAttribute("href", "Javascript:dataexplorer('#" + this.id + "').changeComboExplorer('" + o + "','" + n + "','" + i + "','" + t + "','" + a + "','" + r + "','" + l + "','" + c + "','" + d + "','" + s + "','" + m + "','" + u + "');"), h.setAttribute("style", "white-space:normal;"), p.appendChild(h), e.appendChild(p) }, muestratotalmodal: function (e) { var o = e.split(",").length; 0 == e.indexOf(",") && o--, "," == e.charAt(e.length - 1) && o--, "" != e && "," != e || (o = 0), $("#countIndModal").text(o) }, queryperiods: function (o, n, i, t, a, r, l, c, d, e) { var s = this, m = n; $("#loading").modal("show"), "area" == e && (m = "null"); e = s.servicio + "/API.svc/PeriodoA/" + m + "/null/null/es/0/0/" + o + "/null/null/null/" + tematicaGlobal + "/json/" + s.tk + "?callback=?"; $("#" + s.id).innerHtml = "", e.length < 250 ? $.getJSON(e, null, function (e) { s.fillcombotable(e, o, n, i, t, a, r, l, c, d) }).fail(function (e, o, n) { appCode.hideLoading(), alert("getJSON request failed! " + o) }) : (m = { areaGeografica: m, tema: "null", indicadoresPrincipales: "null", idioma: "es", programa_ciclo: "null", ambito_Sec: "0", indicadoresSeleccionados: o, letra: "null", busqueda: "null", frecuencia: "null", tematica: tematicaGlobal, formato: "json", token: s.tk }, m = JSON.stringify(m), $.ajax({ method: "POST", url: s.servicio + "/API.svc/PeriodoA", contentType: "application/json; charset=utf-8", dataType: "json", data: m, processData: !0, success: function (e) { s.fillcombotable(e, o, n, i, t, a, r, l, c, d) }, error: function (e, o, n) { console.log(o, n) } })) }, fillcombotable: function (e, o, n, i, t, a, r, l, c, d) { if (null == e.ErrorCode) { periodsend = 2 <= (arrayPeriodos = e).length ? (periodsini = e[e.length - 2], e[e.length - 1]) : 0 < e.length ? (periodsini = e[e.length - 1], e[e.length - 1]) : periodsini = "null"; l = document.getElementById(l), c = document.getElementById(c); l.options.length = 0, c.options.length = 0, archConsulta && (periodsini = perioConsulta[0], periodsend = perioConsulta[1]), this.fillcomboperiods(e, l, periodsini), this.fillcomboperiods(e, c, periodsend), $("#loading").modal("hide"); o = o.split(","); const s = []; o.forEach(e => { "" !== e && (s.includes(e) || s.push(e)) }); o = s.join(","); cuadro.CargaParametros(o, n, i, t, a, r, periodsini, periodsend, d, this.id, tematicaGlobal) } else { $("#loading").modal("hide"), console.log(e); d = this.container; 100 == e.ErrorCode ? $(d)[0].innerHTML = "es" == i ? "No existe informacion para los indicadores y el area georgrafica " + nombreAreaGlobal + " seleccionado" : "There is no information for the indicators and the selected " + nombreAreaGlobal + " geographic area." : $(d)[0].innerHTML = "es" == i ? "Ocurrió un error inesperado, favor de intentar más tarde" : "An unexpected error occurred , please try later", $("#divOpcionesExp")[0].style.display = "none" } }, fillcomboperiods: function (e, o, n) { for (var i = 0; i < e.length; i++)this.generateitemscombo(o, e[i], e[i]), e[i] == n && (o.selectedIndex = i) }, generateitemscombo: function (e, o, n) { var i = document.createElement("option"); i.text = o, i.value = n, e.appendChild(i, 0) }, recordEventClose: function () { var e = "newEventClose" + this.container; document.addEventListener ? document.addEventListener(e, appCode.eventclosedataexlorer, !1) : document.attachEvent("onclick", appCode.eventclosedataexlorer) }, eventClose: function () { var e = "newEventClose" + this.container, o = ""; (o = document.createEvent("CustomEvent")).initCustomEvent(e, !1, !1, {}), document.dispatchEvent(o), flagComparativo && (nombreAreaGlobal = ageoanterior, areaGeograficaUnicaGlobal = cveageoanterior, areaGeoGlobal = cveageoanterior) } }, window.dataexplorer || (window.dataexplorer = e) }();